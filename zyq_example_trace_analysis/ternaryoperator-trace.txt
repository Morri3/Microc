[ ]{0:LDARGS}   main 命令行参数
[ 0 ]{1:CALL 0 5}     调用函数 0个参数 位置在5

			4是返回地址  -999是bp默认值
[ 0 4 -999 ]{5:INCSP 1}        分配一个空间
[ 0 4 -999 0 ]{7:GETBP}        获取bp=3
[ 0 4 -999 0 3 ]{8:CSTI 0}        0入栈
[ 0 4 -999 0 3 0 ]{10:ADD}      bp+0=3入栈
[ 0 4 -999 0 3 ]{11:CSTI 10}     10入栈
[ 0 4 -999 0 3 10 ]{13:STI}         当前sp在下标5，sp-1为3，把下标3的值赋为10，并把
                                                  sp-1的位置赋为10
[ 0 4 -999 10 10 ]{14:INCSP -1}       释放一个空间，丢弃10
[ 0 4 -999 10 ]{16:GETBP}           bp=3
[ 0 4 -999 10 3 ]{17:CSTI 0}        0入栈
[ 0 4 -999 10 3 0 ]{19:ADD}          bp+0=3入栈
[ 0 4 -999 10 3 ]{20:LDI}          获得下标3的值=10入栈
[ 0 4 -999 10 10 ]{21:CSTI 5}         5入栈
[ 0 4 -999 10 10 5 ]{23:EQ}              比较10和5是否相等
[ 0 4 -999 10 0 ]{24:IFZERO 34}     如果不相等，跳到34
[ 0 4 -999 10 ]{34:GETBP}            10和5不相等，执行34 
                                                  bp=3
[ 0 4 -999 10 3 ]{35:CSTI 0}           0入栈
[ 0 4 -999 10 3 0 ]{37:ADD}           3+0=3入栈
[ 0 4 -999 10 3 ]{38:LDI}             获取下标3的值=10
[ 0 4 -999 10 10 ]{39:CSTI 2}       2入栈
[ 0 4 -999 10 10 2 ]{41:MUL}         10*2=20
[ 0 4 -999 10 20 ]{42:PRINTI}       打印
20 [ 0 4 -999 10 20 ]{43:INCSP -1}       释放空间，丢弃20
[ 0 4 -999 10 ]{45:INCSP -1}           释放空间，丢弃10
[ 0 4 -999 ]{47:RET -1}             返回
                                                 RET -1分析：
               sp=2      res=s[2]=-999          sp=2-(-1)=3     bp=s[2]=-999
               pc=s[1]=4     s[1]=-999
[ 0 -999 ]{4:STOP}