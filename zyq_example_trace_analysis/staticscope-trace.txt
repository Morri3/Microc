[ ]{0:INCSP 1}         分配一个空间
[ 1573200 ]{2:LDARGS}       main命令行参数有1个res=0
                res
[ 1573200 0 ]{3:CALL 0 37}     调用main函数  0个参数 位置在37
             main返回地址
                    ↓    bp默认值
[ 1573200 0 6 -999 ]{37:CSTI 0}         0入栈
[ 1573200 0 6 -999 0 ]{39:CSTI 3}       3入栈
[ 1573200 0 6 -999 0 3 ]{41:STI}   当前sp在下标5，sp-1为0，把下标0的值赋为3，并把
                                                  sp-1的位置赋为3
[ 3 0 6 -999 3 ]{42:INCSP -1}        释放空间，丢弃栈顶的3
[ 3 0 6 -999 ]{44:CALL 0 17}         调用a函数 0个参数  在17
             a()返回地址                    返回地址是调用语句的下一个位置即46的下一个是47
                    ↓ 
[ 3 0 6 -999 47 4 ]{17:INCSP 1}       分配一个空间
[ 3 0 6 -999 47 4 842145841 ]{19:GETBP}      bp=6
[ 3 0 6 -999 47 4 842145841 6 ]{20:CSTI 0}   0入栈
[ 3 0 6 -999 47 4 842145841 6 0 ]{22:ADD}     6+0=6，获取a函数中的变量res
[ 3 0 6 -999 47 4 842145841 6 ]{23:CSTI 5}      5入栈
[ 3 0 6 -999 47 4 842145841 6 5 ]{25:STI}   当前sp在下标8，sp-1为6，把下标6的值
				赋为5，并把sp-1的位置赋为5
[ 3 0 6 -999 47 4 5 5 ]{26:INCSP -1}    释放空间
[ 3 0 6 -999 47 4 5 ]{28:CALL 0 7}      调用b函数 0个参数  在7
                          b()返回地址
                                ↓
[ 3 0 6 -999 47 4 5 31 6 ]{7:CSTI 0}      0入栈
[ 3 0 6 -999 47 4 5 31 6 0 ]{9:LDI}      获取下标0的值，即获取全局变量res=3
[ 3 0 6 -999 47 4 5 31 6 3 ]{10:PRINTI}    打印
3 [ 3 0 6 -999 47 4 5 31 6 3 ]{11:INCSP -1}   释放空间
[ 3 0 6 -999 47 4 5 31 6 ]{13:INCSP 0}      空操作
[ 3 0 6 -999 47 4 5 31 6 ]{15:RET -1}   返回
				res=s[8]=6
				sp=8-(-1)=9
				bp=s[8]=6
				pc=s[7]=31
				s[7]=6
[ 3 0 6 -999 47 4 5 6 ]{31:RET 1}   返回
			res=s[7]=6
			sp=7-1=6
			bp=s[5]=4
			pc=s[4]=47
			s[4]=6
[ 3 0 6 -999 6 ]{47:INCSP -1}   释放空间
[ 3 0 6 -999 ]{49:INCSP 0}   空操作
[ 3 0 6 -999 ]{51:RET -1}     返回
			res=s[3]=-999
			sp=3-(-1)=4
			bp=s[3]=-999
			pc=s[2]=6
			s[2]=-999
[ 3 0 -999 ]{6:STOP}