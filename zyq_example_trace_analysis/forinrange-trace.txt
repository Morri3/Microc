[ ]{0:LDARGS}        main 命令行参数
[ 0 ]{1:CALL 0 5}          调用函数 0个参数 位置在5

			4是返回地址  -999是bp默认值
[ 0 4 -999 ]{5:INCSP 1}     变量i分配空间
[ 0 4 -999 0 ]{7:GETBP}         bp=3
[ 0 4 -999 0 3 ]{8:CSTI 0}             0入栈
[ 0 4 -999 0 3 0 ]{10:ADD}     3+0=3 获取变量i
[ 0 4 -999 0 3 ]{11:CSTI 8}       8入栈
[ 0 4 -999 0 3 8 ]{13:STI}    当前sp在下标5，sp-1为3，把下标3的值赋为8，并把
                                                  sp-1的位置赋为8
		对应i=8
[ 0 4 -999 8 8 ]{14:INCSP -1}   释放空间，丢弃栈顶8
[ 0 4 -999 8 ]{16:GOTO 40}        无条件跳转到40
[ 0 4 -999 8 ]{40:GETBP}      bp=3
[ 0 4 -999 8 3 ]{41:CSTI 0}       0入栈
[ 0 4 -999 8 3 0 ]{43:ADD}         3+0=3,获取变量i
[ 0 4 -999 8 3 ]{44:LDI}       获取下标3的值，即获取变量i的值
                    i
[ 0 4 -999 8 8 ]{45:CSTI 5}        5入栈
[ 0 4 -999 8 8 5 ]{47:LT}           变量i的值是否小于5
[ 0 4 -999 8 0 ]{48:IFNZRO 18}          大于等于的话就跳转到18
[ 0 4 -999 8 ]{50:INCSP 1}         为变量j分配空间
[ 0 4 -999 8 0 ]{52:GETBP}         bp=3 
[ 0 4 -999 8 0 3 ]{53:CSTI 1}        1入栈
[ 0 4 -999 8 0 3 1 ]{55:ADD}     3+1=4，获取变量j
[ 0 4 -999 8 0 4 ]{56:CSTI 1}        1入栈
[ 0 4 -999 8 0 4 1 ]{58:STI}     当前sp在下标6，sp-1为4，把下标4的值赋为1，并把
                                                  sp-1的位置赋为1
			对应j=1
[ 0 4 -999 8 1 1 ]{59:INCSP -1}      释放空间，丢弃计算结果1
[ 0 4 -999 8 1 ]{61:GOTO 85}     跳转到85
[ 0 4 -999 8 1 ]{85:GETBP}      bp=3
[ 0 4 -999 8 1 3 ]{86:CSTI 1}    1入栈
[ 0 4 -999 8 1 3 1 ]{88:ADD}      3+1=4，获取变量j
[ 0 4 -999 8 1 4 ]{89:LDI}        获取下标4的值，即获取变量j的值=1
[ 0 4 -999 8 1 1 ]{90:CSTI 6}     6入栈
[ 0 4 -999 8 1 1 6 ]{92:LT}         j的值是否小于6
[ 0 4 -999 8 1 1 ]{93:IFNZRO 63}      小于就跳到63
[ 0 4 -999 8 1 ]{63:GETBP}       1<6成立。 bp=3
[ 0 4 -999 8 1 3 ]{64:CSTI 1}     1入栈
[ 0 4 -999 8 1 3 1 ]{66:ADD}       3+1=4获取变量j
[ 0 4 -999 8 1 4 ]{67:LDI}      获取下标4的值，即获取变量j的值=1
[ 0 4 -999 8 1 1 ]{68:PRINTI}    打印1
1 [ 0 4 -999 8 1 1 ]{69:INCSP -1}       释放空间，丢弃计算结果1
[ 0 4 -999 8 1 ]{71:INCSP 0}      空操作
[ 0 4 -999 8 1 ]{73:GETBP}      bp=3
[ 0 4 -999 8 1 3 ]{74:CSTI 1}    1入栈
[ 0 4 -999 8 1 3 1 ]{76:ADD}    3+1=4，获取变量j
[ 0 4 -999 8 1 4 ]{77:DUP}     复制一个变量j的地址
[ 0 4 -999 8 1 4 4 ]{78:LDI}       获取下标4的值，即获取变量j的值
[ 0 4 -999 8 1 4 1 ]{79:CSTI 2}    2入栈
[ 0 4 -999 8 1 4 1 2 ]{81:ADD}       1+2=3，3是j+=2后的结果
[ 0 4 -999 8 1 4 3 ]{82:STI}    当前sp在下标6，sp-1为4，把下标4的值赋为3，并把
                                                  sp-1的位置赋为3
			对应j+=2
[ 0 4 -999 8 3 3 ]{83:INCSP -1}   释放空间，丢弃计算结果3
[ 0 4 -999 8 3 ]{85:GETBP}      bp=3
[ 0 4 -999 8 3 3 ]{86:CSTI 1}      1入栈
[ 0 4 -999 8 3 3 1 ]{88:ADD}     3+1=4,获取变量j
[ 0 4 -999 8 3 4 ]{89:LDI}      获取下标4的值，即获取变量j的值
[ 0 4 -999 8 3 3 ]{90:CSTI 6}      6入栈
[ 0 4 -999 8 3 3 6 ]{92:LT}         变量j是否小于6
[ 0 4 -999 8 3 1 ]{93:IFNZRO 63}      小于就跳到63
[ 0 4 -999 8 3 ]{63:GETBP}       bp=3
[ 0 4 -999 8 3 3 ]{64:CSTI 1}     1入栈
[ 0 4 -999 8 3 3 1 ]{66:ADD}    bp+1=4获取变量j
[ 0 4 -999 8 3 4 ]{67:LDI}        获取变量j的值
[ 0 4 -999 8 3 3 ]{68:PRINTI}     打印
3 [ 0 4 -999 8 3 3 ]{69:INCSP -1}     释放空间
[ 0 4 -999 8 3 ]{71:INCSP 0}      空操作
[ 0 4 -999 8 3 ]{73:GETBP}      bp=3
[ 0 4 -999 8 3 3 ]{74:CSTI 1}    1入栈
[ 0 4 -999 8 3 3 1 ]{76:ADD}     bp+1=4获取变量j
[ 0 4 -999 8 3 4 ]{77:DUP}       复制一份栈顶
[ 0 4 -999 8 3 4 4 ]{78:LDI}       获取下标4的值，即获取变量j的值
[ 0 4 -999 8 3 4 3 ]{79:CSTI 2}    2入栈
[ 0 4 -999 8 3 4 3 2 ]{81:ADD}     3+2=5
[ 0 4 -999 8 3 4 5 ]{82:STI}     当前sp在下标6，sp-1为4，把下标4的值赋为5，并把
                                                  sp-1的位置赋为5
			对应j+=2
[ 0 4 -999 8 5 5 ]{83:INCSP -1}   释放空间
[ 0 4 -999 8 5 ]{85:GETBP}        bp=3
[ 0 4 -999 8 5 3 ]{86:CSTI 1}      1入栈
[ 0 4 -999 8 5 3 1 ]{88:ADD}   bp+1=4获取变量j
[ 0 4 -999 8 5 4 ]{89:LDI}     获取变量j的值=5
[ 0 4 -999 8 5 5 ]{90:CSTI 6}      6入栈
[ 0 4 -999 8 5 5 6 ]{92:LT}         变量j的值是否小于6
[ 0 4 -999 8 5 1 ]{93:IFNZRO 63}      小于就跳到63
[ 0 4 -999 8 5 ]{63:GETBP}      bp=3
[ 0 4 -999 8 5 3 ]{64:CSTI 1}     1入栈
[ 0 4 -999 8 5 3 1 ]{66:ADD}    bp+1=4获取变量j
[ 0 4 -999 8 5 4 ]{67:LDI}      获取变量j的值=5
[ 0 4 -999 8 5 5 ]{68:PRINTI}     打印，对应print i;
5 [ 0 4 -999 8 5 5 ]{69:INCSP -1}  释放空间
[ 0 4 -999 8 5 ]{71:INCSP 0}       空操作
[ 0 4 -999 8 5 ]{73:GETBP}       bp=3
[ 0 4 -999 8 5 3 ]{74:CSTI 1}     1入栈
[ 0 4 -999 8 5 3 1 ]{76:ADD}       bp+1=4
[ 0 4 -999 8 5 4 ]{77:DUP}        复制变量j的地址
[ 0 4 -999 8 5 4 4 ]{78:LDI}        获取变量j的值
[ 0 4 -999 8 5 4 5 ]{79:CSTI 2}      2入栈
[ 0 4 -999 8 5 4 5 2 ]{81:ADD}        5+2=7
[ 0 4 -999 8 5 4 7 ]{82:STI}      当前sp在下标6，sp-1为4，把下标4的值赋为7，并把
                                                  sp-1的位置赋为7
			对应j+=2
[ 0 4 -999 8 7 7 ]{83:INCSP -1}     释放空间
[ 0 4 -999 8 7 ]{85:GETBP}     bp=3
[ 0 4 -999 8 7 3 ]{86:CSTI 1}     1入栈
[ 0 4 -999 8 7 3 1 ]{88:ADD}      3+1=4获取变量j
[ 0 4 -999 8 7 4 ]{89:LDI}       获取变量j的值=7
[ 0 4 -999 8 7 7 ]{90:CSTI 6}      6入栈
[ 0 4 -999 8 7 7 6 ]{92:LT}       变量j的值是否小于7
[ 0 4 -999 8 7 0 ]{93:IFNZRO 63}        不小于，执行95
[ 0 4 -999 8 7 ]{95:INCSP -2}     释放两个空间
[ 0 4 -999 ]{97:RET -1}      返回
[ 0 -999 ]{4:STOP}