// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn      //Absyn包 包含抽象语法树的结点

// Vardesc 返回的是一个 元组(g,s)
  // g是类型构造函数，s是变量名
// compose1函数：取出 类型构造子g，用 类型复合机制 构造类型。
// 该文件中的$1表示第一个位置的元素，以此类推，$3表示第三个位置的元素
  // fun x -> g(f(x)) 表示：函数x，它返回的内容是g(f(x))
//  compose1函数是 类型分步构造 的关键

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  10是\n的ASCII码

let first (x, _, _) = x //取第一个元素
let second (_, y, _) = y //取第二个元素
let third (_, _, z) = z //取第三个元素

# 29 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUESMARK
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SELFINC
  | SELFDEC
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | IN
  | DO
  | RANGE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUESMARK
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_DO
    | TOKEN_RANGE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUESMARK  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | SELFINC  -> 22 
  | SELFDEC  -> 23 
  | PLUSASSIGN  -> 24 
  | MINUSASSIGN  -> 25 
  | TIMESASSIGN  -> 26 
  | DIVASSIGN  -> 27 
  | MODASSIGN  -> 28 
  | PLUS  -> 29 
  | MINUS  -> 30 
  | TIMES  -> 31 
  | DIV  -> 32 
  | MOD  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | NULL  -> 38 
  | PRINT  -> 39 
  | PRINTLN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | FOR  -> 44 
  | IN  -> 45 
  | DO  -> 46 
  | RANGE  -> 47 
  | CSTSTRING _ -> 48 
  | NAME _ -> 49 
  | CSTINT _ -> 50 
  | CSTBOOL _ -> 51 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUESMARK 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_SELFINC 
  | 23 -> TOKEN_SELFDEC 
  | 24 -> TOKEN_PLUSASSIGN 
  | 25 -> TOKEN_MINUSASSIGN 
  | 26 -> TOKEN_TIMESASSIGN 
  | 27 -> TOKEN_DIVASSIGN 
  | 28 -> TOKEN_MODASSIGN 
  | 29 -> TOKEN_PLUS 
  | 30 -> TOKEN_MINUS 
  | 31 -> TOKEN_TIMES 
  | 32 -> TOKEN_DIV 
  | 33 -> TOKEN_MOD 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_NULL 
  | 39 -> TOKEN_PRINT 
  | 40 -> TOKEN_PRINTLN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_FOR 
  | 45 -> TOKEN_IN 
  | 46 -> TOKEN_DO 
  | 47 -> TOKEN_RANGE 
  | 48 -> TOKEN_CSTSTRING 
  | 49 -> TOKEN_NAME 
  | 50 -> TOKEN_CSTINT 
  | 51 -> TOKEN_CSTBOOL 
  | 54 -> TOKEN_end_of_input
  | 52 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Exprs 
    | 80 -> NONTERM_Exprs 
    | 81 -> NONTERM_Exprs1 
    | 82 -> NONTERM_Exprs1 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Type 
    | 88 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 54 
let _fsyacc_tagOfErrorTerminal = 52

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUESMARK  -> "QUESMARK" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | DO  -> "DO" 
  | RANGE  -> "RANGE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUESMARK  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 15us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 92us; 63us; 104us; 63us; 106us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 114us; 13us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 92us; 93us; 104us; 105us; 106us; 107us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 113us; 83us; 115us; 53us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 57us; 97us; 98us; 99us; 100us; 101us; 102us; 104us; 57us; 106us; 57us; 109us; 110us; 121us; 122us; 124us; 160us; 127us; 128us; 129us; 130us; 161us; 138us; 162us; 139us; 163us; 140us; 164us; 141us; 165us; 142us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 146us; 170us; 147us; 171us; 148us; 172us; 149us; 173us; 150us; 174us; 151us; 175us; 152us; 176us; 153us; 177us; 154us; 178us; 155us; 179us; 157us; 180us; 158us; 182us; 156us; 193us; 159us; 196us; 160us; 53us; 65535us; 16us; 118us; 43us; 118us; 46us; 118us; 49us; 118us; 52us; 118us; 59us; 118us; 66us; 118us; 67us; 118us; 70us; 118us; 71us; 118us; 73us; 118us; 74us; 118us; 78us; 118us; 79us; 118us; 82us; 118us; 83us; 118us; 86us; 118us; 88us; 118us; 90us; 118us; 92us; 118us; 97us; 118us; 99us; 118us; 101us; 118us; 104us; 118us; 106us; 118us; 109us; 118us; 121us; 118us; 124us; 118us; 127us; 118us; 129us; 118us; 161us; 118us; 162us; 118us; 163us; 118us; 164us; 118us; 165us; 118us; 166us; 118us; 167us; 118us; 168us; 118us; 169us; 118us; 170us; 118us; 171us; 118us; 172us; 118us; 173us; 118us; 174us; 118us; 175us; 118us; 176us; 118us; 177us; 118us; 178us; 118us; 179us; 118us; 180us; 118us; 182us; 119us; 193us; 118us; 196us; 118us; 54us; 65535us; 16us; 120us; 43us; 120us; 46us; 120us; 49us; 120us; 52us; 120us; 59us; 120us; 66us; 120us; 67us; 120us; 70us; 120us; 71us; 120us; 73us; 120us; 74us; 120us; 78us; 120us; 79us; 120us; 82us; 120us; 83us; 120us; 86us; 120us; 88us; 120us; 90us; 120us; 92us; 120us; 97us; 120us; 99us; 120us; 101us; 120us; 104us; 120us; 106us; 120us; 109us; 120us; 121us; 120us; 124us; 120us; 127us; 120us; 129us; 120us; 161us; 120us; 162us; 120us; 163us; 120us; 164us; 120us; 165us; 120us; 166us; 120us; 167us; 120us; 168us; 120us; 169us; 120us; 170us; 120us; 171us; 120us; 172us; 120us; 173us; 120us; 174us; 120us; 175us; 120us; 176us; 120us; 177us; 120us; 178us; 120us; 179us; 120us; 180us; 120us; 182us; 120us; 190us; 192us; 193us; 120us; 196us; 120us; 58us; 65535us; 16us; 117us; 43us; 117us; 46us; 117us; 49us; 117us; 52us; 117us; 59us; 117us; 66us; 117us; 67us; 117us; 70us; 117us; 71us; 117us; 73us; 117us; 74us; 117us; 78us; 117us; 79us; 117us; 82us; 117us; 83us; 117us; 86us; 94us; 88us; 117us; 90us; 117us; 92us; 117us; 97us; 117us; 99us; 117us; 101us; 117us; 104us; 117us; 106us; 117us; 109us; 117us; 121us; 117us; 124us; 117us; 127us; 117us; 129us; 117us; 132us; 133us; 134us; 135us; 161us; 117us; 162us; 117us; 163us; 117us; 164us; 117us; 165us; 117us; 166us; 117us; 167us; 117us; 168us; 117us; 169us; 117us; 170us; 117us; 171us; 117us; 172us; 117us; 173us; 117us; 174us; 117us; 175us; 117us; 176us; 117us; 177us; 117us; 178us; 117us; 179us; 117us; 180us; 117us; 182us; 116us; 184us; 185us; 187us; 188us; 190us; 191us; 193us; 117us; 196us; 117us; 1us; 65535us; 124us; 125us; 2us; 65535us; 124us; 195us; 196us; 197us; 54us; 65535us; 16us; 181us; 43us; 181us; 46us; 181us; 49us; 181us; 52us; 181us; 59us; 181us; 66us; 181us; 67us; 181us; 70us; 181us; 71us; 181us; 73us; 181us; 74us; 181us; 78us; 181us; 79us; 181us; 82us; 181us; 83us; 181us; 86us; 181us; 88us; 181us; 90us; 181us; 92us; 181us; 97us; 181us; 99us; 181us; 101us; 181us; 104us; 181us; 106us; 181us; 109us; 181us; 121us; 181us; 124us; 181us; 127us; 181us; 129us; 181us; 161us; 181us; 162us; 181us; 163us; 181us; 164us; 181us; 165us; 181us; 166us; 181us; 167us; 181us; 168us; 181us; 169us; 181us; 170us; 181us; 171us; 181us; 172us; 181us; 173us; 181us; 174us; 181us; 175us; 181us; 176us; 181us; 177us; 181us; 178us; 181us; 179us; 181us; 180us; 181us; 182us; 181us; 190us; 181us; 193us; 181us; 196us; 181us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 58us; 63us; 69us; 83us; 91us; 145us; 199us; 254us; 313us; 315us; 318us; 373us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 15us; 8us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 4us; 25us; 31us; 35us; 37us; 1us; 26us; 15us; 27us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 15us; 29us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 29us; 1us; 30us; 2us; 31us; 35us; 4us; 31us; 35us; 37us; 38us; 2us; 31us; 35us; 4us; 31us; 35us; 37us; 38us; 18us; 31us; 35us; 37us; 38us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 16us; 31us; 35us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 2us; 31us; 35us; 4us; 31us; 35us; 37us; 38us; 2us; 31us; 35us; 1us; 31us; 2us; 31us; 37us; 1us; 31us; 1us; 32us; 2us; 32us; 39us; 1us; 32us; 2us; 32us; 39us; 16us; 32us; 39us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 32us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 32us; 2us; 32us; 39us; 1us; 32us; 2us; 33us; 34us; 2us; 33us; 34us; 15us; 33us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 33us; 15us; 33us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 33us; 15us; 33us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 33us; 1us; 33us; 11us; 34us; 40us; 43us; 50us; 51us; 63us; 64us; 65us; 66us; 67us; 78us; 1us; 34us; 1us; 34us; 1us; 34us; 15us; 34us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 34us; 15us; 34us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 34us; 15us; 34us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 15us; 36us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 11us; 40us; 43us; 50us; 51us; 63us; 64us; 65us; 66us; 67us; 75us; 78us; 10us; 40us; 43us; 50us; 51us; 63us; 64us; 65us; 66us; 67us; 78us; 1us; 41us; 2us; 41us; 72us; 1us; 42us; 1us; 43us; 15us; 43us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 2us; 44us; 74us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 15us; 45us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 46us; 15us; 46us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 1us; 47us; 1us; 48us; 2us; 48us; 78us; 1us; 49us; 2us; 49us; 78us; 1us; 50us; 1us; 51us; 15us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 64us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 65us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 66us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 67us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 69us; 70us; 14us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 70us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 78us; 16us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 68us; 69us; 70us; 81us; 82us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 71us; 2us; 72us; 75us; 1us; 72us; 1us; 73us; 2us; 73us; 78us; 1us; 74us; 1us; 75us; 2us; 75us; 78us; 1us; 75us; 2us; 76us; 77us; 2us; 76us; 78us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 80us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 58us; 60us; 63us; 65us; 69us; 71us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 144us; 146us; 162us; 164us; 167us; 169us; 185us; 187us; 189us; 192us; 197us; 200us; 205us; 224us; 241us; 244us; 249us; 252us; 254us; 257us; 259us; 261us; 264us; 266us; 269us; 286us; 302us; 304us; 307us; 309us; 312us; 315us; 331us; 333us; 349us; 351us; 367us; 369us; 371us; 383us; 385us; 387us; 389us; 405us; 407us; 423us; 425us; 441us; 443us; 445us; 447us; 449us; 451us; 453us; 455us; 471us; 473us; 475us; 477us; 479us; 481us; 493us; 504us; 506us; 509us; 511us; 513us; 529us; 532us; 534us; 536us; 538us; 540us; 556us; 558us; 574us; 576us; 578us; 581us; 583us; 586us; 588us; 590us; 606us; 622us; 638us; 654us; 670us; 686us; 702us; 718us; 734us; 750us; 766us; 782us; 798us; 814us; 830us; 846us; 862us; 878us; 893us; 909us; 925us; 941us; 958us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1003us; 1005us; 1007us; 1010us; 1012us; 1014us; 1017us; 1019us; 1022us; 1025us; 1027us; 1029us; 1031us; 1033us; 1035us; 1037us; 1039us; 1041us; 1043us; 1045us; 1047us; 1049us; |]
let _fsyacc_action_rows = 205
let _fsyacc_actionTableElements = [|3us; 16386us; 34us; 204us; 37us; 203us; 42us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 34us; 204us; 37us; 203us; 42us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 31us; 20us; 49us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 49us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 49us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 14us; 16392us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 31us; 20us; 49us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 31us; 20us; 49us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 50us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 49us; 30us; 1us; 32768us; 1us; 31us; 2us; 16400us; 34us; 204us; 37us; 203us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 2us; 16400us; 34us; 204us; 37us; 203us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 2us; 32768us; 34us; 204us; 37us; 203us; 0us; 16403us; 21us; 16405us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 34us; 204us; 36us; 65us; 37us; 203us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 1us; 32768us; 4us; 45us; 0us; 16404us; 21us; 16405us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 34us; 204us; 36us; 65us; 37us; 203us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16406us; 1us; 32768us; 7us; 49us; 21us; 16405us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 34us; 204us; 36us; 65us; 37us; 203us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16407us; 1us; 32768us; 7us; 52us; 21us; 16405us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 34us; 204us; 36us; 65us; 37us; 203us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 35us; 74us; 0us; 16410us; 15us; 32768us; 7us; 58us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 0us; 16411us; 14us; 32768us; 1us; 182us; 7us; 60us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16412us; 15us; 32768us; 7us; 62us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 2us; 71us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 15us; 32768us; 2us; 70us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 64us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 65us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 1us; 16419us; 35us; 73us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 64us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 65us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 2us; 83us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 15us; 32768us; 2us; 82us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 64us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 65us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16416us; 1us; 32768us; 1us; 86us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 7us; 88us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 7us; 90us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 2us; 92us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 64us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16417us; 10us; 16424us; 5us; 193us; 9us; 121us; 22us; 136us; 23us; 137us; 24us; 172us; 25us; 173us; 26us; 174us; 27us; 175us; 28us; 176us; 45us; 95us; 1us; 32768us; 47us; 96us; 1us; 32768us; 1us; 97us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 8us; 99us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 8us; 101us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 2us; 103us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 1us; 32768us; 2us; 104us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 64us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16418us; 19us; 32768us; 1us; 182us; 3us; 43us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 36us; 64us; 38us; 202us; 39us; 129us; 40us; 131us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 49us; 123us; 50us; 198us; 51us; 199us; 1us; 32768us; 43us; 108us; 1us; 32768us; 1us; 109us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 15us; 32768us; 2us; 111us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 1us; 32768us; 7us; 112us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 10us; 16424us; 2us; 189us; 5us; 193us; 9us; 121us; 22us; 136us; 23us; 137us; 24us; 172us; 25us; 173us; 26us; 174us; 27us; 175us; 28us; 176us; 9us; 16424us; 5us; 193us; 9us; 121us; 22us; 136us; 23us; 137us; 24us; 172us; 25us; 173us; 26us; 174us; 27us; 175us; 28us; 176us; 0us; 16425us; 1us; 16425us; 2us; 183us; 0us; 16426us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 14us; 16427us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 1us; 16458us; 1us; 124us; 13us; 16463us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 1us; 32768us; 2us; 126us; 0us; 16428us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16429us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 14us; 16430us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 0us; 16431us; 3us; 32768us; 1us; 187us; 31us; 190us; 49us; 186us; 1us; 16432us; 5us; 193us; 3us; 32768us; 1us; 187us; 31us; 190us; 49us; 186us; 1us; 16433us; 5us; 193us; 0us; 16434us; 0us; 16435us; 3us; 16436us; 31us; 163us; 32us; 164us; 33us; 165us; 3us; 16437us; 31us; 163us; 32us; 164us; 33us; 165us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 9us; 16441us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 9us; 16442us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 9us; 16443us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 9us; 16444us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 9us; 16445us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 9us; 16446us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 16447us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 16448us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 16449us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 16450us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 16451us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 11us; 16452us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 12us; 16453us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 32768us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 15us; 32768us; 11us; 179us; 12us; 180us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 14us; 16454us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 15us; 32768us; 6us; 194us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 15us; 16465us; 8us; 196us; 11us; 179us; 14us; 178us; 15us; 177us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 170us; 21us; 171us; 29us; 161us; 30us; 162us; 31us; 163us; 32us; 164us; 33us; 165us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16455us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16456us; 3us; 32768us; 1us; 187us; 31us; 190us; 49us; 186us; 1us; 16457us; 5us; 193us; 0us; 16458us; 3us; 32768us; 1us; 187us; 31us; 190us; 49us; 186us; 2us; 32768us; 2us; 189us; 5us; 193us; 0us; 16459us; 8us; 32768us; 1us; 182us; 10us; 184us; 30us; 200us; 31us; 190us; 38us; 202us; 49us; 186us; 50us; 198us; 51us; 199us; 1us; 16460us; 5us; 193us; 0us; 16461us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16462us; 0us; 16464us; 13us; 32768us; 1us; 182us; 10us; 184us; 13us; 127us; 22us; 132us; 23us; 134us; 30us; 200us; 31us; 190us; 38us; 202us; 39us; 129us; 40us; 131us; 49us; 123us; 50us; 198us; 51us; 199us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 1us; 32768us; 50us; 201us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 19us; 20us; 24us; 28us; 32us; 35us; 37us; 51us; 66us; 67us; 69us; 73us; 75us; 79us; 82us; 83us; 86us; 87us; 89us; 90us; 92us; 94us; 97us; 99us; 101us; 102us; 105us; 107us; 109us; 110us; 111us; 113us; 116us; 117us; 139us; 141us; 142us; 164us; 165us; 167us; 189us; 190us; 192us; 214us; 215us; 216us; 218us; 219us; 235us; 236us; 251us; 252us; 268us; 269us; 270us; 272us; 274us; 288us; 302us; 318us; 334us; 354us; 374us; 376us; 396us; 416us; 417us; 419us; 421us; 435us; 449us; 465us; 481us; 501us; 521us; 522us; 524us; 538us; 554us; 568us; 584us; 598us; 614us; 634us; 635us; 646us; 648us; 650us; 664us; 680us; 694us; 710us; 724us; 740us; 742us; 762us; 763us; 783us; 785us; 787us; 801us; 817us; 819us; 820us; 821us; 822us; 823us; 834us; 844us; 845us; 847us; 848us; 862us; 877us; 879us; 893us; 895us; 896us; 910us; 911us; 925us; 940us; 941us; 945us; 947us; 951us; 953us; 954us; 955us; 959us; 963us; 964us; 965us; 966us; 976us; 986us; 996us; 1006us; 1016us; 1026us; 1041us; 1056us; 1071us; 1086us; 1101us; 1113us; 1126us; 1141us; 1157us; 1172us; 1188us; 1204us; 1218us; 1232us; 1246us; 1260us; 1274us; 1288us; 1302us; 1316us; 1330us; 1344us; 1358us; 1372us; 1386us; 1400us; 1414us; 1428us; 1442us; 1456us; 1470us; 1484us; 1485us; 1499us; 1500us; 1504us; 1506us; 1507us; 1511us; 1514us; 1515us; 1524us; 1526us; 1527us; 1541us; 1542us; 1543us; 1557us; 1558us; 1559us; 1560us; 1562us; 1563us; 1564us; 1565us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 14us; 5us; 7us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 16425us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 16434us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 65535us; 65535us; 16461us; 65535us; 16462us; 16464us; 65535us; 16466us; 16467us; 16468us; 65535us; 16469us; 16470us; 16471us; 16472us; |]
let _fsyacc_reductions ()  =    [| 
# 500 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 509 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               Prog _1 
                   )
# 60 "CPar.fsy"
                 : Absyn.program));
# 520 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               [] 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdecs));
# 530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdecs));
# 542 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 70 "CPar.fsy"
                 : 'gentype_Topdec));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "CPar.fsy"
                                                               _1 
                   )
# 71 "CPar.fsy"
                 : 'gentype_Topdec));
# 564 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "CPar.fsy"
                                                               VardecAndAssign (first _1,second _1,third _1) 
                   )
# 72 "CPar.fsy"
                 : 'gentype_Topdec));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 91 "CPar.fsy"
                 : 'gentype_Vardec));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               ((fst _2) _1, snd _2, _4)
                   )
# 96 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 611 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 112 "CPar.fsy"
                 : 'gentype_Vardesc));
# 622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               _2                                      
                   )
# 115 "CPar.fsy"
                 : 'gentype_Vardesc));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 119 "CPar.fsy"
                 : 'gentype_Vardesc));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Vardesc));
# 656 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Fundec));
# 669 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Fundec));
# 683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               [] 
                   )
# 138 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 693 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               [_1]     
                   )
# 143 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 715 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 144 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 727 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Block _2 
                   )
# 149 "CPar.fsy"
                 : 'gentype_Block));
# 738 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               [] 
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 748 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 760 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 772 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 784 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               _1 
                   )
# 162 "CPar.fsy"
                 : 'gentype_Stmt));
# 795 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               _1 
                   )
# 163 "CPar.fsy"
                 : 'gentype_Stmt));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtM));
# 817 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Return None          
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtM));
# 827 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 169 "CPar.fsy"
                 : 'gentype_StmtM));
# 838 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               _1                   
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtM));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtM));
# 862 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 172 "CPar.fsy"
                 : 'gentype_StmtM));
# 874 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_StmtM));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_Expr in
            let _11 = parseState.GetInput(11) :?> 'gentype_Expr in
            let _14 = parseState.GetInput(14) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                                                                      ForInExpr(_3, _7, _9, _11, _14) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_StmtM));
# 903 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               IfWithoutElse(_3, _5)
                   )
# 176 "CPar.fsy"
                 : 'gentype_StmtM));
# 915 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                                  DoWhile(_2, _5)      
                   )
# 177 "CPar.fsy"
                 : 'gentype_StmtM));
# 927 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 181 "CPar.fsy"
                 : 'gentype_StmtU));
# 940 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_StmtU));
# 952 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 183 "CPar.fsy"
                 : 'gentype_StmtU));
# 964 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Access _1           
                   )
# 187 "CPar.fsy"
                 : 'gentype_Expr));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               _1                  
                   )
# 188 "CPar.fsy"
                 : 'gentype_Expr));
# 986 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               _1                  
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1021 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1032 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1043 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1053 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               PreInc _2       
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1064 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               PreDec _2       
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1075 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               NextInc _1      
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1086 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               NextDec _1      
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1097 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1109 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1121 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1145 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1157 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1169 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1181 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1193 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 211 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1205 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1217 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 213 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1229 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Prim3("+=", _1, _3) 
                   )
# 214 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1241 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Prim3("-=", _1, _3) 
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1253 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Prim3("*=", _1, _3) 
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1265 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Prim3("/=", _1, _3) 
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1277 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               Prim3("%=", _1, _3) 
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1289 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 219 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1301 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 220 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1313 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               TernaryOperator(_1, _3, _5)
                   )
# 221 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1326 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               CstI _1             
                   )
# 229 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1337 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               _2                  
                   )
# 230 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               Addr _2             
                   )
# 231 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1359 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               AccVar _1           
                   )
# 235 "CPar.fsy"
                 : 'gentype_Access));
# 1370 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               _2                  
                   )
# 236 "CPar.fsy"
                 : 'gentype_Access));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 237 "CPar.fsy"
                 : 'gentype_Access));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 238 "CPar.fsy"
                 : 'gentype_Access));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 239 "CPar.fsy"
                 : 'gentype_Access));
# 1415 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               []       
                   )
# 243 "CPar.fsy"
                 : 'gentype_Exprs));
# 1425 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               _1       
                   )
# 244 "CPar.fsy"
                 : 'gentype_Exprs));
# 1436 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               [_1]     
                   )
# 248 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 249 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1459 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               _1       
                   )
# 253 "CPar.fsy"
                 : 'gentype_Const));
# 1470 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               _1       
                   )
# 254 "CPar.fsy"
                 : 'gentype_Const));
# 1481 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               - _2     
                   )
# 255 "CPar.fsy"
                 : 'gentype_Const));
# 1492 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               -1       
                   )
# 256 "CPar.fsy"
                 : 'gentype_Const));
# 1502 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               TypI     
                   )
# 260 "CPar.fsy"
                 : 'gentype_Type));
# 1512 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               TypC     
                   )
# 261 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1523 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 55;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
