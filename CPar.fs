// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn      //Absyn包 包含抽象语法树的结点

// Vardesc 返回的是一个 元组(g,s)
  // g是类型构造函数，s是变量名
// compose1函数：取出 类型构造子g，用 类型复合机制 构造类型。
// 该文件中的$1表示第一个位置的元素，以此类推，$3表示第三个位置的元素
  // fun x -> g(f(x)) 表示：函数x，它返回的内容是g(f(x))
//  compose1函数是 类型分步构造 的关键

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  10是\n的ASCII码

let first (x, _, _) = x //取第一个元素
let second (_, y, _) = y //取第二个元素
let third (_, _, z) = z //取第三个元素

# 29 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUESMARK
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SELFINC
  | SELFDEC
  | BITLEFT
  | BITRIGHT
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | BITAND
  | BITOR
  | BITXOR
  | BITNOT
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | IN
  | DO
  | RANGE
  | UNTIL
  | SWITCH
  | CASE
  | BREAK
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUESMARK
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_BITLEFT
    | TOKEN_BITRIGHT
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_BITAND
    | TOKEN_BITOR
    | TOKEN_BITXOR
    | TOKEN_BITNOT
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_DO
    | TOKEN_RANGE
    | TOKEN_UNTIL
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_BREAK
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_CaseStmts
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUESMARK  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | SELFINC  -> 22 
  | SELFDEC  -> 23 
  | BITLEFT  -> 24 
  | BITRIGHT  -> 25 
  | PLUSASSIGN  -> 26 
  | MINUSASSIGN  -> 27 
  | TIMESASSIGN  -> 28 
  | DIVASSIGN  -> 29 
  | MODASSIGN  -> 30 
  | PLUS  -> 31 
  | MINUS  -> 32 
  | TIMES  -> 33 
  | DIV  -> 34 
  | MOD  -> 35 
  | BITAND  -> 36 
  | BITOR  -> 37 
  | BITXOR  -> 38 
  | BITNOT  -> 39 
  | CHAR  -> 40 
  | ELSE  -> 41 
  | IF  -> 42 
  | INT  -> 43 
  | NULL  -> 44 
  | PRINT  -> 45 
  | PRINTLN  -> 46 
  | RETURN  -> 47 
  | VOID  -> 48 
  | WHILE  -> 49 
  | FOR  -> 50 
  | IN  -> 51 
  | DO  -> 52 
  | RANGE  -> 53 
  | UNTIL  -> 54 
  | SWITCH  -> 55 
  | CASE  -> 56 
  | BREAK  -> 57 
  | CSTSTRING _ -> 58 
  | NAME _ -> 59 
  | CSTINT _ -> 60 
  | CSTBOOL _ -> 61 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUESMARK 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_SELFINC 
  | 23 -> TOKEN_SELFDEC 
  | 24 -> TOKEN_BITLEFT 
  | 25 -> TOKEN_BITRIGHT 
  | 26 -> TOKEN_PLUSASSIGN 
  | 27 -> TOKEN_MINUSASSIGN 
  | 28 -> TOKEN_TIMESASSIGN 
  | 29 -> TOKEN_DIVASSIGN 
  | 30 -> TOKEN_MODASSIGN 
  | 31 -> TOKEN_PLUS 
  | 32 -> TOKEN_MINUS 
  | 33 -> TOKEN_TIMES 
  | 34 -> TOKEN_DIV 
  | 35 -> TOKEN_MOD 
  | 36 -> TOKEN_BITAND 
  | 37 -> TOKEN_BITOR 
  | 38 -> TOKEN_BITXOR 
  | 39 -> TOKEN_BITNOT 
  | 40 -> TOKEN_CHAR 
  | 41 -> TOKEN_ELSE 
  | 42 -> TOKEN_IF 
  | 43 -> TOKEN_INT 
  | 44 -> TOKEN_NULL 
  | 45 -> TOKEN_PRINT 
  | 46 -> TOKEN_PRINTLN 
  | 47 -> TOKEN_RETURN 
  | 48 -> TOKEN_VOID 
  | 49 -> TOKEN_WHILE 
  | 50 -> TOKEN_FOR 
  | 51 -> TOKEN_IN 
  | 52 -> TOKEN_DO 
  | 53 -> TOKEN_RANGE 
  | 54 -> TOKEN_UNTIL 
  | 55 -> TOKEN_SWITCH 
  | 56 -> TOKEN_CASE 
  | 57 -> TOKEN_BREAK 
  | 58 -> TOKEN_CSTSTRING 
  | 59 -> TOKEN_NAME 
  | 60 -> TOKEN_CSTINT 
  | 61 -> TOKEN_CSTBOOL 
  | 64 -> TOKEN_end_of_input
  | 62 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtM 
    | 39 -> NONTERM_StmtM 
    | 40 -> NONTERM_CaseStmts 
    | 41 -> NONTERM_CaseStmts 
    | 42 -> NONTERM_StmtU 
    | 43 -> NONTERM_StmtU 
    | 44 -> NONTERM_StmtU 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_Expr 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_ExprNotAccess 
    | 77 -> NONTERM_ExprNotAccess 
    | 78 -> NONTERM_ExprNotAccess 
    | 79 -> NONTERM_ExprNotAccess 
    | 80 -> NONTERM_ExprNotAccess 
    | 81 -> NONTERM_ExprNotAccess 
    | 82 -> NONTERM_AtExprNotAccess 
    | 83 -> NONTERM_AtExprNotAccess 
    | 84 -> NONTERM_AtExprNotAccess 
    | 85 -> NONTERM_Access 
    | 86 -> NONTERM_Access 
    | 87 -> NONTERM_Access 
    | 88 -> NONTERM_Access 
    | 89 -> NONTERM_Access 
    | 90 -> NONTERM_Exprs 
    | 91 -> NONTERM_Exprs 
    | 92 -> NONTERM_Exprs1 
    | 93 -> NONTERM_Exprs1 
    | 94 -> NONTERM_Const 
    | 95 -> NONTERM_Const 
    | 96 -> NONTERM_Const 
    | 97 -> NONTERM_Const 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 64 
let _fsyacc_tagOfErrorTerminal = 62

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUESMARK  -> "QUESMARK" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | BITLEFT  -> "BITLEFT" 
  | BITRIGHT  -> "BITRIGHT" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | BITAND  -> "BITAND" 
  | BITOR  -> "BITOR" 
  | BITXOR  -> "BITXOR" 
  | BITNOT  -> "BITNOT" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | DO  -> "DO" 
  | RANGE  -> "RANGE" 
  | UNTIL  -> "UNTIL" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | BREAK  -> "BREAK" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUESMARK  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | BITLEFT  -> (null : System.Object) 
  | BITRIGHT  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | BITAND  -> (null : System.Object) 
  | BITOR  -> (null : System.Object) 
  | BITXOR  -> (null : System.Object) 
  | BITNOT  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 16us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 92us; 63us; 104us; 63us; 106us; 63us; 129us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 133us; 14us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 92us; 93us; 104us; 105us; 106us; 107us; 129us; 130us; 2us; 65535us; 122us; 123us; 130us; 131us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 132us; 83us; 134us; 63us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 57us; 97us; 98us; 99us; 100us; 101us; 102us; 104us; 57us; 106us; 57us; 109us; 110us; 114us; 115us; 119us; 120us; 129us; 57us; 140us; 141us; 143us; 185us; 146us; 147us; 148us; 149us; 186us; 157us; 187us; 158us; 188us; 159us; 189us; 160us; 190us; 161us; 191us; 162us; 192us; 163us; 193us; 164us; 194us; 165us; 195us; 166us; 196us; 167us; 197us; 168us; 198us; 169us; 199us; 170us; 200us; 171us; 201us; 172us; 202us; 173us; 203us; 174us; 204us; 175us; 205us; 176us; 206us; 177us; 207us; 178us; 208us; 179us; 209us; 180us; 210us; 182us; 211us; 183us; 213us; 181us; 214us; 181us; 225us; 184us; 228us; 185us; 63us; 65535us; 16us; 137us; 43us; 137us; 46us; 137us; 49us; 137us; 52us; 137us; 59us; 137us; 66us; 137us; 67us; 137us; 70us; 137us; 71us; 137us; 73us; 137us; 74us; 137us; 78us; 137us; 79us; 137us; 82us; 137us; 83us; 137us; 86us; 137us; 88us; 137us; 90us; 137us; 92us; 137us; 97us; 137us; 99us; 137us; 101us; 137us; 104us; 137us; 106us; 137us; 109us; 137us; 114us; 137us; 119us; 137us; 129us; 137us; 140us; 137us; 143us; 137us; 146us; 137us; 148us; 137us; 186us; 137us; 187us; 137us; 188us; 137us; 189us; 137us; 190us; 137us; 191us; 137us; 192us; 137us; 193us; 137us; 194us; 137us; 195us; 137us; 196us; 137us; 197us; 137us; 198us; 137us; 199us; 137us; 200us; 137us; 201us; 137us; 202us; 137us; 203us; 137us; 204us; 137us; 205us; 137us; 206us; 137us; 207us; 137us; 208us; 137us; 209us; 137us; 210us; 137us; 211us; 137us; 213us; 138us; 214us; 138us; 225us; 137us; 228us; 137us; 65us; 65535us; 16us; 139us; 43us; 139us; 46us; 139us; 49us; 139us; 52us; 139us; 59us; 139us; 66us; 139us; 67us; 139us; 70us; 139us; 71us; 139us; 73us; 139us; 74us; 139us; 78us; 139us; 79us; 139us; 82us; 139us; 83us; 139us; 86us; 139us; 88us; 139us; 90us; 139us; 92us; 139us; 97us; 139us; 99us; 139us; 101us; 139us; 104us; 139us; 106us; 139us; 109us; 139us; 114us; 139us; 119us; 139us; 127us; 128us; 129us; 139us; 140us; 139us; 143us; 139us; 146us; 139us; 148us; 139us; 186us; 139us; 187us; 139us; 188us; 139us; 189us; 139us; 190us; 139us; 191us; 139us; 192us; 139us; 193us; 139us; 194us; 139us; 195us; 139us; 196us; 139us; 197us; 139us; 198us; 139us; 199us; 139us; 200us; 139us; 201us; 139us; 202us; 139us; 203us; 139us; 204us; 139us; 205us; 139us; 206us; 139us; 207us; 139us; 208us; 139us; 209us; 139us; 210us; 139us; 211us; 139us; 213us; 139us; 214us; 139us; 222us; 224us; 225us; 139us; 228us; 139us; 68us; 65535us; 16us; 136us; 43us; 136us; 46us; 136us; 49us; 136us; 52us; 136us; 59us; 136us; 66us; 136us; 67us; 136us; 70us; 136us; 71us; 136us; 73us; 136us; 74us; 136us; 78us; 136us; 79us; 136us; 82us; 136us; 83us; 136us; 86us; 94us; 88us; 136us; 90us; 136us; 92us; 136us; 97us; 136us; 99us; 136us; 101us; 136us; 104us; 136us; 106us; 136us; 109us; 136us; 114us; 136us; 119us; 136us; 129us; 136us; 140us; 136us; 143us; 136us; 146us; 136us; 148us; 136us; 151us; 152us; 153us; 154us; 186us; 136us; 187us; 136us; 188us; 136us; 189us; 136us; 190us; 136us; 191us; 136us; 192us; 136us; 193us; 136us; 194us; 136us; 195us; 136us; 196us; 136us; 197us; 136us; 198us; 136us; 199us; 136us; 200us; 136us; 201us; 136us; 202us; 136us; 203us; 136us; 204us; 136us; 205us; 136us; 206us; 136us; 207us; 136us; 208us; 136us; 209us; 136us; 210us; 136us; 211us; 136us; 213us; 136us; 214us; 135us; 216us; 217us; 219us; 220us; 222us; 223us; 225us; 136us; 228us; 136us; 1us; 65535us; 143us; 144us; 2us; 65535us; 143us; 227us; 228us; 229us; 65us; 65535us; 16us; 212us; 43us; 212us; 46us; 212us; 49us; 212us; 52us; 212us; 59us; 212us; 66us; 212us; 67us; 212us; 70us; 212us; 71us; 212us; 73us; 212us; 74us; 212us; 78us; 212us; 79us; 212us; 82us; 212us; 83us; 212us; 86us; 212us; 88us; 212us; 90us; 212us; 92us; 212us; 97us; 212us; 99us; 212us; 101us; 212us; 104us; 212us; 106us; 212us; 109us; 212us; 114us; 212us; 119us; 212us; 127us; 212us; 129us; 212us; 140us; 212us; 143us; 212us; 146us; 212us; 148us; 212us; 186us; 212us; 187us; 212us; 188us; 212us; 189us; 212us; 190us; 212us; 191us; 212us; 192us; 212us; 193us; 212us; 194us; 212us; 195us; 212us; 196us; 212us; 197us; 212us; 198us; 212us; 199us; 212us; 200us; 212us; 201us; 212us; 202us; 212us; 203us; 212us; 204us; 212us; 205us; 212us; 206us; 212us; 207us; 212us; 208us; 212us; 209us; 212us; 210us; 212us; 211us; 212us; 213us; 212us; 214us; 212us; 222us; 212us; 225us; 212us; 228us; 212us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 59us; 64us; 70us; 85us; 88us; 96us; 160us; 224us; 290us; 359us; 361us; 364us; 430us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 20us; 8us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 4us; 25us; 31us; 35us; 42us; 1us; 26us; 20us; 27us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 20us; 29us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 29us; 1us; 30us; 2us; 31us; 35us; 4us; 31us; 35us; 42us; 43us; 2us; 31us; 35us; 4us; 31us; 35us; 42us; 43us; 23us; 31us; 35us; 42us; 43us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 21us; 31us; 35us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 2us; 31us; 35us; 4us; 31us; 35us; 42us; 43us; 2us; 31us; 35us; 1us; 31us; 2us; 31us; 42us; 1us; 31us; 1us; 32us; 2us; 32us; 44us; 1us; 32us; 2us; 32us; 44us; 21us; 32us; 44us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 32us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 32us; 2us; 32us; 44us; 1us; 32us; 2us; 33us; 34us; 2us; 33us; 34us; 20us; 33us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 33us; 20us; 33us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 33us; 20us; 33us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 33us; 1us; 33us; 11us; 34us; 45us; 48us; 55us; 56us; 74us; 75us; 76us; 77us; 78us; 89us; 1us; 34us; 1us; 34us; 1us; 34us; 20us; 34us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 34us; 20us; 34us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 34us; 20us; 34us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 34us; 1us; 34us; 1us; 34us; 2us; 36us; 37us; 2us; 36us; 37us; 1us; 36us; 1us; 36us; 20us; 36us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 20us; 37us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 20us; 38us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 2us; 40us; 41us; 2us; 40us; 41us; 2us; 40us; 41us; 2us; 40us; 41us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 11us; 45us; 48us; 55us; 56us; 74us; 75us; 76us; 77us; 78us; 86us; 89us; 10us; 45us; 48us; 55us; 56us; 74us; 75us; 76us; 77us; 78us; 89us; 1us; 46us; 2us; 46us; 83us; 1us; 47us; 1us; 48us; 20us; 48us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 2us; 49us; 85us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 50us; 20us; 50us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 51us; 20us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 1us; 52us; 1us; 53us; 2us; 53us; 89us; 1us; 54us; 2us; 54us; 89us; 1us; 55us; 1us; 56us; 20us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 74us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 75us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 76us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 77us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 78us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 80us; 81us; 19us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 81us; 20us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 89us; 21us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 79us; 80us; 81us; 92us; 93us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 83us; 2us; 83us; 86us; 1us; 83us; 1us; 84us; 2us; 84us; 89us; 1us; 85us; 1us; 86us; 2us; 86us; 89us; 1us; 86us; 2us; 87us; 88us; 2us; 87us; 89us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 91us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 63us; 65us; 68us; 70us; 74us; 76us; 80us; 82us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 111us; 113us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 140us; 142us; 144us; 149us; 151us; 172us; 174us; 177us; 179us; 200us; 202us; 204us; 207us; 212us; 215us; 220us; 244us; 266us; 269us; 274us; 277us; 279us; 282us; 284us; 286us; 289us; 291us; 294us; 316us; 337us; 339us; 342us; 344us; 347us; 350us; 371us; 373us; 394us; 396us; 417us; 419us; 421us; 433us; 435us; 437us; 439us; 460us; 462us; 483us; 485us; 506us; 508us; 510us; 512us; 515us; 518us; 520us; 522us; 543us; 545us; 547us; 549us; 551us; 572us; 574us; 576us; 578us; 580us; 601us; 603us; 605us; 607us; 609us; 611us; 613us; 616us; 619us; 622us; 625us; 627us; 629us; 631us; 633us; 645us; 656us; 658us; 661us; 663us; 665us; 686us; 689us; 691us; 693us; 695us; 697us; 718us; 720us; 741us; 743us; 745us; 748us; 750us; 753us; 755us; 757us; 778us; 799us; 820us; 841us; 862us; 883us; 904us; 925us; 946us; 967us; 988us; 1009us; 1030us; 1051us; 1072us; 1093us; 1114us; 1135us; 1156us; 1177us; 1198us; 1219us; 1240us; 1261us; 1281us; 1302us; 1323us; 1344us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1425us; 1427us; 1429us; 1432us; 1434us; 1436us; 1439us; 1441us; 1444us; 1447us; 1449us; 1451us; 1453us; 1455us; 1457us; 1459us; 1461us; 1463us; 1465us; 1467us; 1469us; 1471us; |]
let _fsyacc_action_rows = 237
let _fsyacc_actionTableElements = [|3us; 16386us; 40us; 236us; 43us; 235us; 48us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 40us; 236us; 43us; 235us; 48us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 33us; 20us; 59us; 18us; 3us; 32768us; 1us; 22us; 33us; 20us; 59us; 18us; 3us; 32768us; 1us; 22us; 33us; 20us; 59us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 19us; 16392us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 33us; 20us; 59us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 33us; 20us; 59us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 60us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 59us; 30us; 1us; 32768us; 1us; 31us; 2us; 16400us; 40us; 236us; 43us; 235us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 2us; 16400us; 40us; 236us; 43us; 235us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 2us; 32768us; 40us; 236us; 43us; 235us; 0us; 16403us; 24us; 16405us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 40us; 236us; 42us; 65us; 43us; 235us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 1us; 32768us; 4us; 45us; 0us; 16404us; 24us; 16405us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 40us; 236us; 42us; 65us; 43us; 235us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16406us; 1us; 32768us; 7us; 49us; 24us; 16405us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 40us; 236us; 42us; 65us; 43us; 235us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16407us; 1us; 32768us; 7us; 52us; 24us; 16405us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 40us; 236us; 42us; 65us; 43us; 235us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 41us; 74us; 0us; 16410us; 20us; 32768us; 7us; 58us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 0us; 16411us; 15us; 32768us; 1us; 214us; 7us; 60us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16412us; 20us; 32768us; 7us; 62us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 71us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 20us; 32768us; 2us; 70us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 65us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 1us; 16419us; 41us; 73us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 65us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 83us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 20us; 32768us; 2us; 82us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 65us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 77us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16416us; 1us; 32768us; 1us; 86us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 7us; 88us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 7us; 90us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 92us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16417us; 10us; 16429us; 5us; 225us; 9us; 140us; 22us; 155us; 23us; 156us; 26us; 203us; 27us; 204us; 28us; 205us; 29us; 206us; 30us; 207us; 51us; 95us; 1us; 32768us; 53us; 96us; 1us; 32768us; 1us; 97us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 8us; 99us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 8us; 101us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 103us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 1us; 32768us; 2us; 104us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16418us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 2us; 32768us; 49us; 108us; 54us; 113us; 1us; 32768us; 1us; 109us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 111us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 1us; 32768us; 7us; 112us; 0us; 16420us; 1us; 32768us; 1us; 114us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 116us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 1us; 32768us; 7us; 117us; 0us; 16421us; 1us; 32768us; 1us; 119us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 20us; 32768us; 2us; 121us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 1us; 32768us; 3us; 122us; 1us; 32768us; 56us; 127us; 1us; 32768us; 4us; 124us; 0us; 16422us; 1us; 32768us; 7us; 126us; 0us; 16423us; 6us; 32768us; 1us; 213us; 10us; 216us; 32us; 232us; 44us; 234us; 60us; 230us; 61us; 231us; 1us; 32768us; 12us; 129us; 22us; 32768us; 1us; 214us; 3us; 43us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 42us; 64us; 44us; 234us; 45us; 148us; 46us; 150us; 47us; 59us; 49us; 76us; 50us; 85us; 52us; 106us; 55us; 118us; 57us; 125us; 59us; 142us; 60us; 230us; 61us; 231us; 1us; 16424us; 56us; 127us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 0us; 16428us; 10us; 16429us; 2us; 221us; 5us; 225us; 9us; 140us; 22us; 155us; 23us; 156us; 26us; 203us; 27us; 204us; 28us; 205us; 29us; 206us; 30us; 207us; 9us; 16429us; 5us; 225us; 9us; 140us; 22us; 155us; 23us; 156us; 26us; 203us; 27us; 204us; 28us; 205us; 29us; 206us; 30us; 207us; 0us; 16430us; 1us; 16430us; 2us; 215us; 0us; 16431us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 19us; 16432us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 1us; 16469us; 1us; 143us; 14us; 16474us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 1us; 32768us; 2us; 145us; 0us; 16433us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 1us; 16434us; 10us; 199us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 19us; 16435us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 0us; 16436us; 3us; 32768us; 1us; 219us; 33us; 222us; 59us; 218us; 1us; 16437us; 5us; 225us; 3us; 32768us; 1us; 219us; 33us; 222us; 59us; 218us; 1us; 16438us; 5us; 225us; 0us; 16439us; 0us; 16440us; 4us; 16441us; 10us; 199us; 33us; 188us; 34us; 189us; 35us; 190us; 4us; 16442us; 10us; 199us; 33us; 188us; 34us; 189us; 35us; 190us; 1us; 16443us; 10us; 199us; 1us; 16444us; 10us; 199us; 1us; 16445us; 10us; 199us; 12us; 16446us; 10us; 199us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 12us; 16447us; 10us; 199us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 12us; 16448us; 10us; 199us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 12us; 16449us; 10us; 199us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 12us; 16450us; 10us; 199us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 12us; 16451us; 10us; 199us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 6us; 16452us; 10us; 199us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 6us; 16453us; 10us; 199us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 1us; 16454us; 10us; 199us; 14us; 16455us; 10us; 199us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 14us; 16456us; 10us; 199us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 1us; 16457us; 10us; 199us; 19us; 16458us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 19us; 16459us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 19us; 16460us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 19us; 16461us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 19us; 16462us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 16us; 16463us; 10us; 199us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 17us; 16464us; 10us; 199us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 19us; 32768us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 20us; 32768us; 10us; 199us; 11us; 210us; 12us; 211us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 19us; 16465us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 20us; 32768us; 6us; 226us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 20us; 16476us; 8us; 228us; 10us; 199us; 11us; 210us; 14us; 209us; 15us; 208us; 16us; 191us; 17us; 192us; 18us; 193us; 19us; 194us; 20us; 195us; 21us; 196us; 24us; 197us; 25us; 198us; 31us; 186us; 32us; 187us; 33us; 188us; 34us; 189us; 35us; 190us; 37us; 200us; 38us; 201us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16466us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16467us; 3us; 32768us; 1us; 219us; 33us; 222us; 59us; 218us; 1us; 16468us; 5us; 225us; 0us; 16469us; 3us; 32768us; 1us; 219us; 33us; 222us; 59us; 218us; 2us; 32768us; 2us; 221us; 5us; 225us; 0us; 16470us; 8us; 32768us; 1us; 214us; 10us; 216us; 32us; 232us; 33us; 222us; 44us; 234us; 59us; 218us; 60us; 230us; 61us; 231us; 1us; 16471us; 5us; 225us; 0us; 16472us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16473us; 0us; 16475us; 14us; 32768us; 1us; 214us; 10us; 216us; 13us; 146us; 22us; 151us; 23us; 153us; 32us; 232us; 33us; 222us; 39us; 202us; 44us; 234us; 45us; 148us; 46us; 150us; 59us; 142us; 60us; 230us; 61us; 231us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 1us; 32768us; 60us; 233us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 19us; 20us; 24us; 28us; 32us; 35us; 37us; 52us; 72us; 73us; 75us; 79us; 81us; 85us; 88us; 89us; 92us; 93us; 95us; 96us; 98us; 100us; 103us; 105us; 107us; 108us; 111us; 113us; 115us; 116us; 117us; 119us; 122us; 123us; 148us; 150us; 151us; 176us; 177us; 179us; 204us; 205us; 207us; 232us; 233us; 234us; 236us; 237us; 258us; 259us; 275us; 276us; 297us; 298us; 299us; 301us; 303us; 318us; 333us; 354us; 375us; 398us; 421us; 423us; 446us; 469us; 470us; 472us; 474us; 489us; 504us; 525us; 546us; 569us; 592us; 593us; 595us; 610us; 631us; 646us; 667us; 682us; 703us; 726us; 727us; 738us; 740us; 742us; 757us; 778us; 793us; 814us; 829us; 850us; 852us; 875us; 876us; 899us; 902us; 904us; 919us; 940us; 942us; 943us; 945us; 960us; 981us; 983us; 984us; 986us; 1001us; 1022us; 1024us; 1026us; 1028us; 1029us; 1031us; 1032us; 1039us; 1041us; 1064us; 1066us; 1067us; 1068us; 1069us; 1070us; 1081us; 1091us; 1092us; 1094us; 1095us; 1110us; 1130us; 1132us; 1147us; 1149us; 1150us; 1165us; 1167us; 1182us; 1202us; 1203us; 1207us; 1209us; 1213us; 1215us; 1216us; 1217us; 1222us; 1227us; 1229us; 1231us; 1233us; 1246us; 1259us; 1272us; 1285us; 1298us; 1311us; 1318us; 1325us; 1327us; 1342us; 1357us; 1359us; 1379us; 1399us; 1419us; 1439us; 1459us; 1476us; 1494us; 1514us; 1535us; 1555us; 1576us; 1597us; 1612us; 1627us; 1642us; 1657us; 1672us; 1687us; 1702us; 1717us; 1732us; 1747us; 1762us; 1777us; 1792us; 1807us; 1822us; 1837us; 1852us; 1867us; 1882us; 1897us; 1912us; 1927us; 1942us; 1957us; 1972us; 1987us; 1988us; 2003us; 2018us; 2019us; 2023us; 2025us; 2026us; 2030us; 2033us; 2034us; 2043us; 2045us; 2046us; 2061us; 2062us; 2063us; 2078us; 2079us; 2080us; 2081us; 2083us; 2084us; 2085us; 2086us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 14us; 5us; 7us; 7us; 7us; 2us; 4us; 5us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 16425us; 16426us; 16427us; 16428us; 65535us; 65535us; 16430us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 16439us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16466us; 65535us; 65535us; 16467us; 65535us; 65535us; 16469us; 65535us; 65535us; 16470us; 65535us; 65535us; 16472us; 65535us; 16473us; 16475us; 65535us; 16477us; 16478us; 16479us; 65535us; 16480us; 16481us; 16482us; 16483us; |]
let _fsyacc_reductions ()  =    [| 
# 572 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 581 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               Prog _1 
                   )
# 63 "CPar.fsy"
                 : Absyn.program));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               [] 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Topdecs));
# 602 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 69 "CPar.fsy"
                 : 'gentype_Topdecs));
# 614 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Topdec));
# 625 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "CPar.fsy"
                                                               _1 
                   )
# 74 "CPar.fsy"
                 : 'gentype_Topdec));
# 636 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               VardecAndAssign (first _1,second _1,third _1) 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Topdec));
# 647 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardec));
# 659 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               ((fst _2) _1, snd _2, _4)
                   )
# 99 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 672 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 110 "CPar.fsy"
                 : 'gentype_Vardesc));
# 683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 115 "CPar.fsy"
                 : 'gentype_Vardesc));
# 694 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               _2                                      
                   )
# 118 "CPar.fsy"
                 : 'gentype_Vardesc));
# 705 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 122 "CPar.fsy"
                 : 'gentype_Vardesc));
# 716 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Vardesc));
# 728 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Fundec));
# 741 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 136 "CPar.fsy"
                 : 'gentype_Fundec));
# 755 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               [] 
                   )
# 141 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 765 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               _1 
                   )
# 142 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 776 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               [_1]     
                   )
# 146 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 787 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 147 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 799 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Block _2 
                   )
# 152 "CPar.fsy"
                 : 'gentype_Block));
# 810 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               [] 
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 820 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 832 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 844 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 856 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1 
                   )
# 165 "CPar.fsy"
                 : 'gentype_Stmt));
# 867 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               _1 
                   )
# 166 "CPar.fsy"
                 : 'gentype_Stmt));
# 878 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtM));
# 889 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Return None          
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtM));
# 899 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 172 "CPar.fsy"
                 : 'gentype_StmtM));
# 910 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                   
                   )
# 173 "CPar.fsy"
                 : 'gentype_StmtM));
# 921 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 174 "CPar.fsy"
                 : 'gentype_StmtM));
# 934 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 175 "CPar.fsy"
                 : 'gentype_StmtM));
# 946 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_StmtM));
# 960 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_Expr in
            let _11 = parseState.GetInput(11) :?> 'gentype_Expr in
            let _14 = parseState.GetInput(14) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                                                                      ForInExpr(_3, _7, _9, _11, _14) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_StmtM));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               IfWithoutElse(_3, _5)
                   )
# 179 "CPar.fsy"
                 : 'gentype_StmtM));
# 987 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                                  DoWhile(_2, _5)      
                   )
# 180 "CPar.fsy"
                 : 'gentype_StmtM));
# 999 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                                  DoUntil(_2, _5)      
                   )
# 181 "CPar.fsy"
                 : 'gentype_StmtM));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_CaseStmts in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                                         Switch(_3, _6) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_StmtM));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                                               Break                
                   )
# 183 "CPar.fsy"
                 : 'gentype_StmtM));
# 1033 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                                  [Case(_2, _4)]       
                   )
# 188 "CPar.fsy"
                 : 'gentype_CaseStmts));
# 1045 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_CaseStmts in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                                       [Case(_2, _4)] @ _5  
                   )
# 189 "CPar.fsy"
                 : 'gentype_CaseStmts));
# 1058 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 193 "CPar.fsy"
                 : 'gentype_StmtU));
# 1071 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_StmtU));
# 1083 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 195 "CPar.fsy"
                 : 'gentype_StmtU));
# 1095 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Access _1           
                   )
# 199 "CPar.fsy"
                 : 'gentype_Expr));
# 1106 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               _1                  
                   )
# 200 "CPar.fsy"
                 : 'gentype_Expr));
# 1117 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               _1                  
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1128 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1140 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1152 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1163 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1184 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               PreInc _2       
                   )
# 211 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1195 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               PreDec _2       
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1206 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               NextInc _1      
                   )
# 213 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1217 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               NextDec _1      
                   )
# 214 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1228 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1252 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1276 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 219 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1288 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 220 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1300 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 221 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1312 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 222 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1324 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 223 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1336 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 224 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 225 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1360 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               Prim2("<<", _1, _3) 
                   )
# 226 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1372 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               Prim2(">>", _1, _3) 
                   )
# 227 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1384 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               Prim2("&", _1, _3)      
                   )
# 228 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1396 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               Prim2("|", _1, _3) 
                   )
# 229 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1408 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               Prim2("^", _1, _3) 
                   )
# 230 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1420 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               Prim1("~", _2) 
                   )
# 231 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1431 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               Prim3("+=", _1, _3) 
                   )
# 232 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1443 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               Prim3("-=", _1, _3) 
                   )
# 233 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1455 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               Prim3("*=", _1, _3) 
                   )
# 234 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1467 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               Prim3("/=", _1, _3) 
                   )
# 235 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1479 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               Prim3("%=", _1, _3) 
                   )
# 236 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 237 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1503 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 238 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1515 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               TernaryOperator(_1, _3, _5)
                   )
# 239 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1528 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               CstI _1             
                   )
# 247 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1539 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               _2                  
                   )
# 248 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1550 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               Addr _2             
                   )
# 249 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1561 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               AccVar _1           
                   )
# 253 "CPar.fsy"
                 : 'gentype_Access));
# 1572 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               _2                  
                   )
# 254 "CPar.fsy"
                 : 'gentype_Access));
# 1583 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 255 "CPar.fsy"
                 : 'gentype_Access));
# 1594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 256 "CPar.fsy"
                 : 'gentype_Access));
# 1605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 257 "CPar.fsy"
                 : 'gentype_Access));
# 1617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               []       
                   )
# 261 "CPar.fsy"
                 : 'gentype_Exprs));
# 1627 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CPar.fsy"
                                                               _1       
                   )
# 262 "CPar.fsy"
                 : 'gentype_Exprs));
# 1638 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CPar.fsy"
                                                               [_1]     
                   )
# 266 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1649 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 267 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1661 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 "CPar.fsy"
                                                               _1       
                   )
# 271 "CPar.fsy"
                 : 'gentype_Const));
# 1672 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "CPar.fsy"
                                                               _1       
                   )
# 272 "CPar.fsy"
                 : 'gentype_Const));
# 1683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "CPar.fsy"
                                                               - _2     
                   )
# 273 "CPar.fsy"
                 : 'gentype_Const));
# 1694 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "CPar.fsy"
                                                               -1       
                   )
# 274 "CPar.fsy"
                 : 'gentype_Const));
# 1704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "CPar.fsy"
                                                               TypI     
                   )
# 278 "CPar.fsy"
                 : 'gentype_Type));
# 1714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "CPar.fsy"
                                                               TypC     
                   )
# 279 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1725 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 65;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
