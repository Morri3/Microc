// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn      //Absyn包 包含抽象语法树的结点

// Vardesc 返回的是一个 元组(g,s)
  // g是类型构造函数，s是变量名
// compose1函数：取出 类型构造子g，用 类型复合机制 构造类型。
// 该文件中的$1表示第一个位置的元素，以此类推，$3表示第三个位置的元素
  // fun x -> g(f(x)) 表示：函数x，它返回的内容是g(f(x))
//  compose1函数是 类型分步构造 的关键

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  10是\n的ASCII码

let first (x, _, _) = x //取第一个元素
let second (_, y, _) = y //取第二个元素
let third (_, _, z) = z //取第三个元素

# 29 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUESMARK
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SELFINC
  | SELFDEC
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | IN
  | DO
  | RANGE
  | UNTIL
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUESMARK
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_DO
    | TOKEN_RANGE
    | TOKEN_UNTIL
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUESMARK  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | SELFINC  -> 22 
  | SELFDEC  -> 23 
  | PLUSASSIGN  -> 24 
  | MINUSASSIGN  -> 25 
  | TIMESASSIGN  -> 26 
  | DIVASSIGN  -> 27 
  | MODASSIGN  -> 28 
  | PLUS  -> 29 
  | MINUS  -> 30 
  | TIMES  -> 31 
  | DIV  -> 32 
  | MOD  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | NULL  -> 38 
  | PRINT  -> 39 
  | PRINTLN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | FOR  -> 44 
  | IN  -> 45 
  | DO  -> 46 
  | RANGE  -> 47 
  | UNTIL  -> 48 
  | CSTSTRING _ -> 49 
  | NAME _ -> 50 
  | CSTINT _ -> 51 
  | CSTBOOL _ -> 52 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUESMARK 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_SELFINC 
  | 23 -> TOKEN_SELFDEC 
  | 24 -> TOKEN_PLUSASSIGN 
  | 25 -> TOKEN_MINUSASSIGN 
  | 26 -> TOKEN_TIMESASSIGN 
  | 27 -> TOKEN_DIVASSIGN 
  | 28 -> TOKEN_MODASSIGN 
  | 29 -> TOKEN_PLUS 
  | 30 -> TOKEN_MINUS 
  | 31 -> TOKEN_TIMES 
  | 32 -> TOKEN_DIV 
  | 33 -> TOKEN_MOD 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_NULL 
  | 39 -> TOKEN_PRINT 
  | 40 -> TOKEN_PRINTLN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_FOR 
  | 45 -> TOKEN_IN 
  | 46 -> TOKEN_DO 
  | 47 -> TOKEN_RANGE 
  | 48 -> TOKEN_UNTIL 
  | 49 -> TOKEN_CSTSTRING 
  | 50 -> TOKEN_NAME 
  | 51 -> TOKEN_CSTINT 
  | 52 -> TOKEN_CSTBOOL 
  | 55 -> TOKEN_end_of_input
  | 53 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Exprs 
    | 81 -> NONTERM_Exprs 
    | 82 -> NONTERM_Exprs1 
    | 83 -> NONTERM_Exprs1 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_Type 
    | 89 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 55 
let _fsyacc_tagOfErrorTerminal = 53

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUESMARK  -> "QUESMARK" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | DO  -> "DO" 
  | RANGE  -> "RANGE" 
  | UNTIL  -> "UNTIL" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUESMARK  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 15us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 92us; 63us; 104us; 63us; 106us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 119us; 13us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 92us; 93us; 104us; 105us; 106us; 107us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 118us; 83us; 120us; 54us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 57us; 97us; 98us; 99us; 100us; 101us; 102us; 104us; 57us; 106us; 57us; 109us; 110us; 114us; 115us; 126us; 127us; 129us; 165us; 132us; 133us; 134us; 135us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 146us; 170us; 147us; 171us; 148us; 172us; 149us; 173us; 150us; 174us; 151us; 175us; 152us; 176us; 153us; 177us; 154us; 178us; 155us; 179us; 156us; 180us; 157us; 181us; 158us; 182us; 159us; 183us; 160us; 184us; 162us; 185us; 163us; 187us; 161us; 198us; 164us; 201us; 165us; 54us; 65535us; 16us; 123us; 43us; 123us; 46us; 123us; 49us; 123us; 52us; 123us; 59us; 123us; 66us; 123us; 67us; 123us; 70us; 123us; 71us; 123us; 73us; 123us; 74us; 123us; 78us; 123us; 79us; 123us; 82us; 123us; 83us; 123us; 86us; 123us; 88us; 123us; 90us; 123us; 92us; 123us; 97us; 123us; 99us; 123us; 101us; 123us; 104us; 123us; 106us; 123us; 109us; 123us; 114us; 123us; 126us; 123us; 129us; 123us; 132us; 123us; 134us; 123us; 166us; 123us; 167us; 123us; 168us; 123us; 169us; 123us; 170us; 123us; 171us; 123us; 172us; 123us; 173us; 123us; 174us; 123us; 175us; 123us; 176us; 123us; 177us; 123us; 178us; 123us; 179us; 123us; 180us; 123us; 181us; 123us; 182us; 123us; 183us; 123us; 184us; 123us; 185us; 123us; 187us; 124us; 198us; 123us; 201us; 123us; 55us; 65535us; 16us; 125us; 43us; 125us; 46us; 125us; 49us; 125us; 52us; 125us; 59us; 125us; 66us; 125us; 67us; 125us; 70us; 125us; 71us; 125us; 73us; 125us; 74us; 125us; 78us; 125us; 79us; 125us; 82us; 125us; 83us; 125us; 86us; 125us; 88us; 125us; 90us; 125us; 92us; 125us; 97us; 125us; 99us; 125us; 101us; 125us; 104us; 125us; 106us; 125us; 109us; 125us; 114us; 125us; 126us; 125us; 129us; 125us; 132us; 125us; 134us; 125us; 166us; 125us; 167us; 125us; 168us; 125us; 169us; 125us; 170us; 125us; 171us; 125us; 172us; 125us; 173us; 125us; 174us; 125us; 175us; 125us; 176us; 125us; 177us; 125us; 178us; 125us; 179us; 125us; 180us; 125us; 181us; 125us; 182us; 125us; 183us; 125us; 184us; 125us; 185us; 125us; 187us; 125us; 195us; 197us; 198us; 125us; 201us; 125us; 59us; 65535us; 16us; 122us; 43us; 122us; 46us; 122us; 49us; 122us; 52us; 122us; 59us; 122us; 66us; 122us; 67us; 122us; 70us; 122us; 71us; 122us; 73us; 122us; 74us; 122us; 78us; 122us; 79us; 122us; 82us; 122us; 83us; 122us; 86us; 94us; 88us; 122us; 90us; 122us; 92us; 122us; 97us; 122us; 99us; 122us; 101us; 122us; 104us; 122us; 106us; 122us; 109us; 122us; 114us; 122us; 126us; 122us; 129us; 122us; 132us; 122us; 134us; 122us; 137us; 138us; 139us; 140us; 166us; 122us; 167us; 122us; 168us; 122us; 169us; 122us; 170us; 122us; 171us; 122us; 172us; 122us; 173us; 122us; 174us; 122us; 175us; 122us; 176us; 122us; 177us; 122us; 178us; 122us; 179us; 122us; 180us; 122us; 181us; 122us; 182us; 122us; 183us; 122us; 184us; 122us; 185us; 122us; 187us; 121us; 189us; 190us; 192us; 193us; 195us; 196us; 198us; 122us; 201us; 122us; 1us; 65535us; 129us; 130us; 2us; 65535us; 129us; 200us; 201us; 202us; 55us; 65535us; 16us; 186us; 43us; 186us; 46us; 186us; 49us; 186us; 52us; 186us; 59us; 186us; 66us; 186us; 67us; 186us; 70us; 186us; 71us; 186us; 73us; 186us; 74us; 186us; 78us; 186us; 79us; 186us; 82us; 186us; 83us; 186us; 86us; 186us; 88us; 186us; 90us; 186us; 92us; 186us; 97us; 186us; 99us; 186us; 101us; 186us; 104us; 186us; 106us; 186us; 109us; 186us; 114us; 186us; 126us; 186us; 129us; 186us; 132us; 186us; 134us; 186us; 166us; 186us; 167us; 186us; 168us; 186us; 169us; 186us; 170us; 186us; 171us; 186us; 172us; 186us; 173us; 186us; 174us; 186us; 175us; 186us; 176us; 186us; 177us; 186us; 178us; 186us; 179us; 186us; 180us; 186us; 181us; 186us; 182us; 186us; 183us; 186us; 184us; 186us; 185us; 186us; 187us; 186us; 195us; 186us; 198us; 186us; 201us; 186us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 58us; 63us; 69us; 83us; 91us; 146us; 201us; 257us; 317us; 319us; 322us; 378us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 15us; 8us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 4us; 25us; 31us; 35us; 38us; 1us; 26us; 15us; 27us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 15us; 29us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 29us; 1us; 30us; 2us; 31us; 35us; 4us; 31us; 35us; 38us; 39us; 2us; 31us; 35us; 4us; 31us; 35us; 38us; 39us; 18us; 31us; 35us; 38us; 39us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 16us; 31us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 2us; 31us; 35us; 4us; 31us; 35us; 38us; 39us; 2us; 31us; 35us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 2us; 32us; 40us; 16us; 32us; 40us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 32us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 2us; 33us; 34us; 2us; 33us; 34us; 15us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 33us; 15us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 33us; 15us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 33us; 1us; 33us; 11us; 34us; 41us; 44us; 51us; 52us; 64us; 65us; 66us; 67us; 68us; 79us; 1us; 34us; 1us; 34us; 1us; 34us; 15us; 34us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 34us; 15us; 34us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 34us; 15us; 34us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 34us; 1us; 34us; 1us; 34us; 2us; 36us; 37us; 2us; 36us; 37us; 1us; 36us; 1us; 36us; 15us; 36us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 15us; 37us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 11us; 41us; 44us; 51us; 52us; 64us; 65us; 66us; 67us; 68us; 76us; 79us; 10us; 41us; 44us; 51us; 52us; 64us; 65us; 66us; 67us; 68us; 79us; 1us; 42us; 2us; 42us; 73us; 1us; 43us; 1us; 44us; 15us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 2us; 45us; 75us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 15us; 46us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 47us; 15us; 47us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 1us; 48us; 1us; 49us; 2us; 49us; 79us; 1us; 50us; 2us; 50us; 79us; 1us; 51us; 1us; 52us; 15us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 65us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 66us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 67us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 70us; 71us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 71us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 79us; 16us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 71us; 82us; 83us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 2us; 73us; 76us; 1us; 73us; 1us; 74us; 2us; 74us; 79us; 1us; 75us; 1us; 76us; 2us; 76us; 79us; 1us; 76us; 2us; 77us; 78us; 2us; 77us; 79us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 81us; 1us; 83us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 58us; 60us; 63us; 65us; 69us; 71us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 144us; 146us; 162us; 164us; 167us; 169us; 185us; 187us; 189us; 192us; 197us; 200us; 205us; 224us; 241us; 244us; 249us; 252us; 254us; 257us; 259us; 261us; 264us; 266us; 269us; 286us; 302us; 304us; 307us; 309us; 312us; 315us; 331us; 333us; 349us; 351us; 367us; 369us; 371us; 383us; 385us; 387us; 389us; 405us; 407us; 423us; 425us; 441us; 443us; 445us; 447us; 450us; 453us; 455us; 457us; 473us; 475us; 477us; 479us; 481us; 497us; 499us; 501us; 503us; 505us; 507us; 519us; 530us; 532us; 535us; 537us; 539us; 555us; 558us; 560us; 562us; 564us; 566us; 582us; 584us; 600us; 602us; 604us; 607us; 609us; 612us; 614us; 616us; 632us; 648us; 664us; 680us; 696us; 712us; 728us; 744us; 760us; 776us; 792us; 808us; 824us; 840us; 856us; 872us; 888us; 904us; 919us; 935us; 951us; 967us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1008us; 1010us; 1012us; 1014us; 1016us; 1018us; 1020us; 1022us; 1024us; 1026us; 1029us; 1031us; 1033us; 1036us; 1038us; 1040us; 1043us; 1045us; 1048us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; |]
let _fsyacc_action_rows = 210
let _fsyacc_actionTableElements = [|3us; 16386us; 34us; 209us; 37us; 208us; 42us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 34us; 209us; 37us; 208us; 42us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 31us; 20us; 50us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 50us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 50us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 14us; 16392us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 31us; 20us; 50us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 31us; 20us; 50us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 51us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 50us; 30us; 1us; 32768us; 1us; 31us; 2us; 16400us; 34us; 209us; 37us; 208us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 2us; 16400us; 34us; 209us; 37us; 208us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 2us; 32768us; 34us; 209us; 37us; 208us; 0us; 16403us; 21us; 16405us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 34us; 209us; 36us; 65us; 37us; 208us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 1us; 32768us; 4us; 45us; 0us; 16404us; 21us; 16405us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 34us; 209us; 36us; 65us; 37us; 208us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16406us; 1us; 32768us; 7us; 49us; 21us; 16405us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 34us; 209us; 36us; 65us; 37us; 208us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16407us; 1us; 32768us; 7us; 52us; 21us; 16405us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 34us; 209us; 36us; 65us; 37us; 208us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 35us; 74us; 0us; 16410us; 15us; 32768us; 7us; 58us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 0us; 16411us; 14us; 32768us; 1us; 187us; 7us; 60us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16412us; 15us; 32768us; 7us; 62us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 2us; 71us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 15us; 32768us; 2us; 70us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 64us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 65us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 1us; 16419us; 35us; 73us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 64us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 65us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 2us; 83us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 15us; 32768us; 2us; 82us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 64us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 65us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 77us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16416us; 1us; 32768us; 1us; 86us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 7us; 88us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 7us; 90us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 2us; 92us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 64us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16417us; 10us; 16425us; 5us; 198us; 9us; 126us; 22us; 141us; 23us; 142us; 24us; 177us; 25us; 178us; 26us; 179us; 27us; 180us; 28us; 181us; 45us; 95us; 1us; 32768us; 47us; 96us; 1us; 32768us; 1us; 97us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 8us; 99us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 8us; 101us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 2us; 103us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 1us; 32768us; 2us; 104us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 64us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16418us; 19us; 32768us; 1us; 187us; 3us; 43us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 36us; 64us; 38us; 207us; 39us; 134us; 40us; 136us; 41us; 59us; 43us; 76us; 44us; 85us; 46us; 106us; 50us; 128us; 51us; 203us; 52us; 204us; 2us; 32768us; 43us; 108us; 48us; 113us; 1us; 32768us; 1us; 109us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 2us; 111us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 1us; 32768us; 7us; 112us; 0us; 16420us; 1us; 32768us; 1us; 114us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 15us; 32768us; 2us; 116us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 1us; 32768us; 7us; 117us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 10us; 16425us; 2us; 194us; 5us; 198us; 9us; 126us; 22us; 141us; 23us; 142us; 24us; 177us; 25us; 178us; 26us; 179us; 27us; 180us; 28us; 181us; 9us; 16425us; 5us; 198us; 9us; 126us; 22us; 141us; 23us; 142us; 24us; 177us; 25us; 178us; 26us; 179us; 27us; 180us; 28us; 181us; 0us; 16426us; 1us; 16426us; 2us; 188us; 0us; 16427us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 14us; 16428us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 1us; 16459us; 1us; 129us; 13us; 16464us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 1us; 32768us; 2us; 131us; 0us; 16429us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16430us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 14us; 16431us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 0us; 16432us; 3us; 32768us; 1us; 192us; 31us; 195us; 50us; 191us; 1us; 16433us; 5us; 198us; 3us; 32768us; 1us; 192us; 31us; 195us; 50us; 191us; 1us; 16434us; 5us; 198us; 0us; 16435us; 0us; 16436us; 3us; 16437us; 31us; 168us; 32us; 169us; 33us; 170us; 3us; 16438us; 31us; 168us; 32us; 169us; 33us; 170us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 9us; 16442us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 9us; 16443us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 9us; 16444us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 9us; 16445us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 9us; 16446us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 9us; 16447us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 16448us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 16449us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 16450us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 16451us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 16452us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 11us; 16453us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 12us; 16454us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 32768us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 15us; 32768us; 11us; 184us; 12us; 185us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 14us; 16455us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 15us; 32768us; 6us; 199us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 15us; 16466us; 8us; 201us; 11us; 184us; 14us; 183us; 15us; 182us; 16us; 171us; 17us; 172us; 18us; 173us; 19us; 174us; 20us; 175us; 21us; 176us; 29us; 166us; 30us; 167us; 31us; 168us; 32us; 169us; 33us; 170us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16456us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16457us; 3us; 32768us; 1us; 192us; 31us; 195us; 50us; 191us; 1us; 16458us; 5us; 198us; 0us; 16459us; 3us; 32768us; 1us; 192us; 31us; 195us; 50us; 191us; 2us; 32768us; 2us; 194us; 5us; 198us; 0us; 16460us; 8us; 32768us; 1us; 187us; 10us; 189us; 30us; 205us; 31us; 195us; 38us; 207us; 50us; 191us; 51us; 203us; 52us; 204us; 1us; 16461us; 5us; 198us; 0us; 16462us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16463us; 0us; 16465us; 13us; 32768us; 1us; 187us; 10us; 189us; 13us; 132us; 22us; 137us; 23us; 139us; 30us; 205us; 31us; 195us; 38us; 207us; 39us; 134us; 40us; 136us; 50us; 128us; 51us; 203us; 52us; 204us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 1us; 32768us; 51us; 206us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 19us; 20us; 24us; 28us; 32us; 35us; 37us; 51us; 66us; 67us; 69us; 73us; 75us; 79us; 82us; 83us; 86us; 87us; 89us; 90us; 92us; 94us; 97us; 99us; 101us; 102us; 105us; 107us; 109us; 110us; 111us; 113us; 116us; 117us; 139us; 141us; 142us; 164us; 165us; 167us; 189us; 190us; 192us; 214us; 215us; 216us; 218us; 219us; 235us; 236us; 251us; 252us; 268us; 269us; 270us; 272us; 274us; 288us; 302us; 318us; 334us; 354us; 374us; 376us; 396us; 416us; 417us; 419us; 421us; 435us; 449us; 465us; 481us; 501us; 521us; 522us; 524us; 538us; 554us; 568us; 584us; 598us; 614us; 634us; 635us; 646us; 648us; 650us; 664us; 680us; 694us; 710us; 724us; 740us; 742us; 762us; 763us; 783us; 786us; 788us; 802us; 818us; 820us; 821us; 823us; 837us; 853us; 855us; 856us; 857us; 858us; 859us; 870us; 880us; 881us; 883us; 884us; 898us; 913us; 915us; 929us; 931us; 932us; 946us; 947us; 961us; 976us; 977us; 981us; 983us; 987us; 989us; 990us; 991us; 995us; 999us; 1000us; 1001us; 1002us; 1012us; 1022us; 1032us; 1042us; 1052us; 1062us; 1077us; 1092us; 1107us; 1122us; 1137us; 1149us; 1162us; 1177us; 1193us; 1208us; 1224us; 1240us; 1254us; 1268us; 1282us; 1296us; 1310us; 1324us; 1338us; 1352us; 1366us; 1380us; 1394us; 1408us; 1422us; 1436us; 1450us; 1464us; 1478us; 1492us; 1506us; 1520us; 1521us; 1535us; 1536us; 1540us; 1542us; 1543us; 1547us; 1550us; 1551us; 1560us; 1562us; 1563us; 1577us; 1578us; 1579us; 1593us; 1594us; 1595us; 1596us; 1598us; 1599us; 1600us; 1601us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 14us; 5us; 7us; 7us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 16435us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 16457us; 65535us; 65535us; 16459us; 65535us; 65535us; 16460us; 65535us; 65535us; 16462us; 65535us; 16463us; 16465us; 65535us; 16467us; 16468us; 16469us; 65535us; 16470us; 16471us; 16472us; 16473us; |]
let _fsyacc_reductions ()  =    [| 
# 507 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 516 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               Prog _1 
                   )
# 60 "CPar.fsy"
                 : Absyn.program));
# 527 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               [] 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdecs));
# 537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdecs));
# 549 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 70 "CPar.fsy"
                 : 'gentype_Topdec));
# 560 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "CPar.fsy"
                                                               _1 
                   )
# 71 "CPar.fsy"
                 : 'gentype_Topdec));
# 571 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "CPar.fsy"
                                                               VardecAndAssign (first _1,second _1,third _1) 
                   )
# 72 "CPar.fsy"
                 : 'gentype_Topdec));
# 582 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 91 "CPar.fsy"
                 : 'gentype_Vardec));
# 594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               ((fst _2) _1, snd _2, _4)
                   )
# 96 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 607 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 618 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 112 "CPar.fsy"
                 : 'gentype_Vardesc));
# 629 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               _2                                      
                   )
# 115 "CPar.fsy"
                 : 'gentype_Vardesc));
# 640 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 119 "CPar.fsy"
                 : 'gentype_Vardesc));
# 651 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Vardesc));
# 663 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Fundec));
# 676 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Fundec));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               [] 
                   )
# 138 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 700 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 711 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               [_1]     
                   )
# 143 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 722 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 144 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 734 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Block _2 
                   )
# 149 "CPar.fsy"
                 : 'gentype_Block));
# 745 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               [] 
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 755 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 767 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 779 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 791 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               _1 
                   )
# 162 "CPar.fsy"
                 : 'gentype_Stmt));
# 802 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               _1 
                   )
# 163 "CPar.fsy"
                 : 'gentype_Stmt));
# 813 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtM));
# 824 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Return None          
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtM));
# 834 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 169 "CPar.fsy"
                 : 'gentype_StmtM));
# 845 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               _1                   
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtM));
# 856 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtM));
# 869 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 172 "CPar.fsy"
                 : 'gentype_StmtM));
# 881 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_StmtM));
# 895 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_Expr in
            let _11 = parseState.GetInput(11) :?> 'gentype_Expr in
            let _14 = parseState.GetInput(14) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                                                                      ForInExpr(_3, _7, _9, _11, _14) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_StmtM));
# 910 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               IfWithoutElse(_3, _5)
                   )
# 176 "CPar.fsy"
                 : 'gentype_StmtM));
# 922 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                                  DoWhile(_2, _5)      
                   )
# 177 "CPar.fsy"
                 : 'gentype_StmtM));
# 934 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                                  DoUntil(_2, _5)      
                   )
# 178 "CPar.fsy"
                 : 'gentype_StmtM));
# 946 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 182 "CPar.fsy"
                 : 'gentype_StmtU));
# 959 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_StmtU));
# 971 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 184 "CPar.fsy"
                 : 'gentype_StmtU));
# 983 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Access _1           
                   )
# 188 "CPar.fsy"
                 : 'gentype_Expr));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               _1                  
                   )
# 189 "CPar.fsy"
                 : 'gentype_Expr));
# 1005 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               _1                  
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1016 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1028 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1040 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1051 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1062 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1072 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               PreInc _2       
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1083 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               PreDec _2       
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1094 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               NextInc _1      
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1105 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               NextDec _1      
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1116 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1128 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1140 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1152 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1164 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1176 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1188 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1200 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 211 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1212 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1224 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 213 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1236 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 214 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1248 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Prim3("+=", _1, _3) 
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1260 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Prim3("-=", _1, _3) 
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1272 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Prim3("*=", _1, _3) 
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1284 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               Prim3("/=", _1, _3) 
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1296 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               Prim3("%=", _1, _3) 
                   )
# 219 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1308 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 220 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1320 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 221 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1332 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               TernaryOperator(_1, _3, _5)
                   )
# 222 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1345 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               CstI _1             
                   )
# 230 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1356 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               _2                  
                   )
# 231 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1367 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               Addr _2             
                   )
# 232 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1378 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               AccVar _1           
                   )
# 236 "CPar.fsy"
                 : 'gentype_Access));
# 1389 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               _2                  
                   )
# 237 "CPar.fsy"
                 : 'gentype_Access));
# 1400 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 238 "CPar.fsy"
                 : 'gentype_Access));
# 1411 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 239 "CPar.fsy"
                 : 'gentype_Access));
# 1422 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 240 "CPar.fsy"
                 : 'gentype_Access));
# 1434 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               []       
                   )
# 244 "CPar.fsy"
                 : 'gentype_Exprs));
# 1444 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               _1       
                   )
# 245 "CPar.fsy"
                 : 'gentype_Exprs));
# 1455 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               [_1]     
                   )
# 249 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1466 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 250 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1478 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               _1       
                   )
# 254 "CPar.fsy"
                 : 'gentype_Const));
# 1489 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               _1       
                   )
# 255 "CPar.fsy"
                 : 'gentype_Const));
# 1500 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               - _2     
                   )
# 256 "CPar.fsy"
                 : 'gentype_Const));
# 1511 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               -1       
                   )
# 257 "CPar.fsy"
                 : 'gentype_Const));
# 1521 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               TypI     
                   )
# 261 "CPar.fsy"
                 : 'gentype_Type));
# 1531 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CPar.fsy"
                                                               TypC     
                   )
# 262 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1542 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 56;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
